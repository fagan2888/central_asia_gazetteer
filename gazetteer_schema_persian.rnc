#TEST
# James Pickett
# This schema models an un-edited, Persian-language gazetteer about 1910 Bukhara.
# The text is organized by province, which means the text itself can be coded hierarchically --
# ideal for XML. I.e. an attribute tying all the text for a province to a vector file, and then
# within that text individual places tied to specific coordinates.
# The text also has quite a lot of data, i.e. population figures, etc.


start = document
document = element document { metadata, gazetteer }


#METADATA

# placeholder information: will add more later

metadata = element metadata {title}
title = element title { text }

# DOCUMENT

gazetteer = element gazetteer {mixed {doc_div+} }


# Document division can refer to any kind of structural divider within a text: paragraph, invocatio, diagonal writing, etc.


doc_div = element div {div_type, (divLike | loc_sec)* }

# divlike captures a wide range of information markup that can appear at multiple levels
divLike = mixed { ( loc | lb | doc_div | individual | intertext | work | term | ts | location | emic_id | etym | sem | orth | date | pg | flag | honorific | financial | legal)* }


# loc_sec wraps around a section of text that is related to a specific place
# essentially this is a special kind of document division that is associated with a *vector file*
loc_sec = element loc_sec {id, divLike}
id = attribute id {text}

# loc wraps individual words that correspond to a place
loc = element loc {id, text}



#  (i-a) Page number is a milestone element; attribute Folio refers to internal pagination
pg = element pg { folio, empty }
folio = attribute folio { text }
page = attribute page { text }




# removed from permissible attribute values: "closing", "couplet", and "preamble", because these are all topical structures, and should therefore be captured by <ts>
# removed from permissible attricute values: "line" which is now a separate element (<lb>); "gloss" (contained in relational database); and "report (specific to Russian documents, which will not use this schema)

div_type =
    attribute type { "heading" | "marginalia" | "section" | "sentence" | "seal" }

# (i-c) Lines
# I don't see any reason to code lines as milestones, as in EpiDoc. 
# I previously coded lines as an attribute of <div>, but switched them to their own element just because that was cumbersome.

# When expanded, <lb>, at least as used by the TEI, means "line beginning", and it's typically treated as an empty milestone element, rather than a 
# wrapper element, since semantically it indicates a point between lines (like a milestone marker on a road), and does not contain a line. 
# An easy alternative solution to this high-level problem is simply to rename your <lb> elements as <line> or <l> elements, to make your descriptive markup more 
#faithful to its intended use. XML processors don't know what element names mean, which is why tag abuse isn't an XML error, 
# but life is easier for humans if element and attribute names correspond to what we think they mean intuitively.

lb = element lb { empty }

# lb = element lb { mixed {(flag)}*}


# Marginalia references, local to the document: TBD. This is done in TEI using <metamark> (http://tei.oucs.ox.ac.uk/release/doc/tei-p5-doc/en/html/ref-metamark.html).
# Will involve empty element citation-style references, e.g. <s n="note1"/> <e n="note1"/> surrounding the marginal note, and then seomething like <note n="note1"/> in the text.


# (II) Thematic Sections
# The gazetteer is orgnized by location, and within each location (corresponding to <loc_sec>),
# there are semi-predictable topical sections
# Here "lore" is the broadest category; "infrastructure" includes population; "sacred" refers to sacred geography and pilgrimage sites.

ts = element ts { ts_type, divLike }
ts_type = attribute type { "lore" | "economic" | "geography" | "infrastructure" | "agricultural" | "nat-resources" | "sacred" }



# (III) Transcription Annotation

# Dealing with transcription problems in the text. TEI EpiDoc uses the following conventions (inter alia):
# Illegible Characters, Quantity Unknown: <gap reason="illegible" extent="unknown"unit="character"/>. Here this corresponds to <flag type=gap>
# Ambiguous Characters: <unclear>, with a more complicated variant when possible alternatives are offered (http://www.stoa.org/epidoc/gl/latest/trans-ambiguousalt.html). Here this corresponds to <flag type="unclear">.

flag = element flag { flag_type, text }
flag_type = attribute type { "orthography" | "transcription" | "meaning" | "unclear" | "gap" }


# (IV) Historical Annotation

# These categories overlap with tables in the relational database. However, this markup will mostly be used to extract information from the documents (at least initially).
# For the most part, I will not be manually marking strings that I know are common and can easily be captured by a machine, at least initially.

# (iv-a) Individuals 
# Corresponding relational database table titled "Prosopography."
# This is used exclusively for proper nouns, i.e. when the name of an individual is referenced. (Previously I coded implicit references as well: no longer.)

individual =
    element individual {
        mixed { ind_id?, (role? | honorific? | location? | flag?)* }
    }
ind_id = attribute id { text }

 
# (iv-b) Locations
# Corresponding to relational database table titled "Gazetteer."
# Places, institutions, etc.

location = element location { loc_id?, text }
loc_id = attribute id { text }
# will eventually be an idref#
emic_id = element emic_id { emic_type, text }
emic_type = attribute type { text }


# (iv-c) Social Role
# Any generalized term that refers to a person (e.g. military rank, confession, ethnicity).

role = element role { role_id, text }
role_id = attribute id { text }

# (iv-d) Knowledge Form


# (iv-e) Technical Terminology
# consistency / definitional issues: what qualifies as a "technical term"?

term = element term { term_type?, text }
term_type = attribute type { "admin" | "genre" | "injunction" | "request" }
# "injunction" is an order from a superior to an inferior; "request" is the inverse, a missive 


# (iv-f) Textual Works
# Tag for anytime the title of another work (usually a classical source of some kind) is invoked in the text.

work = element work {text}

# (iv-g) Intertextual Reference
# Separate ids for Qur'an, Hadith, and references to the Bibliography (text_id)
# This element wraps around the entire quoted text.

intertext =
    element intertext {
        mixed { quran_id | hadith_id | text_id }
    }
quran_id = attribute quran_id { text }
hadith_id = attribute hadith_id { text }
text_id = attribute text_id { text }


# (iv-h) Honorifics
# This is a loose category (not currently corresponding to any table in the relational database) designed to produce a lexicon of common honorifics.
# Targets the smallest possible unit.

honorific =
    element honorific {
        mixed { pg? }
    }
    
 
 
# (V) Linguistic Annotation

# (v-i) Etymology
# Names of places and people not marked: only words for which the semantic meaning is central.
# This primarily targets unusual occurances; Arabic loan words are ubiquitous in Persian and (presumably) easy to mark by machine, so not marked with this element.
# Meanwhile, Indic loan words and Turkic loan words are relatively uncommon in writing, and a lexicon created by this element may be useful down the road.

etym = element etym { etym_type, text }
etym_type = attribute type { "turkic" | "indic" | "english" | "russian" }


# (v-ii) Semantics
# Flags words with an unusual meaning. Specifically, this generally marks etymologically Arabic and Persian words used with a meaning specific to the regional context (i.e. Central or South Asia).

sem = element sem {text}

# (v-iii) Language Flag
# This element flags linguistic features that may later be useful for systemic analysis (e.g. calques, grammar).

lang = element lang { lang_type, text }
lang_type =
   attribute type {
        list { ("turk_calque" | "indic_calque" | "syntax" | "tajik")+ } }
# "tajik" marks any construction that is specific to Central Asia, but not directly borrowed from Turkic.

orth = element orth { orth_type, text }
orth_type = attribute type { "misspelling" }
# Currently this is used mostly to track common mispellings, not including proper nouns.



# __Date__ format is day/month/year for all three
date = element date { (jul_date | greg_date | hij_date), text }

# On the topic of dates, we encourage you to explore the xsd:dateTime datatype and consider its 
# usefulness for you in defining what a date should actually look like in your document. It uses ISO 
# format, and it's particularly useful if you have to do date arithmetic, or determine the day of the
# week for a particular date. The downside is that ISO 8601 dates are always Gregorian because they
# refer to the date as a fact, and not as recorded in a particular document. Some developers will write
# the date as it appears in the document (perhaps according to the Julian calendar) and then include
# the ISO date (necessarily Gregorian) as an attribute value. 


jul_date = attribute jul_date { text }
greg_date = attribute greg_date { text }
hij_date = attribute hij_date { text }

        
# __Financial__ data, e.g. prices, salaries, etc.
financial = element financial { financial_type, text }
financial_type = attribute type { "salary" | "price" | "debt" }
# __Legal__ tracks legal terms
legal = element legal { text }


